// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: event_stream/commands/schemas/schemas.proto

package schemas

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PostStatus int32

const (
	PostStatus_ACTIVE   PostStatus = 0
	PostStatus_BOUNTIED PostStatus = 1
	PostStatus_CLOSED   PostStatus = 2
	PostStatus_FLAGED   PostStatus = 3
	PostStatus_ARCHIVED PostStatus = 4
	PostStatus_ANSWERED PostStatus = 5
)

// Enum value maps for PostStatus.
var (
	PostStatus_name = map[int32]string{
		0: "ACTIVE",
		1: "BOUNTIED",
		2: "CLOSED",
		3: "FLAGED",
		4: "ARCHIVED",
		5: "ANSWERED",
	}
	PostStatus_value = map[string]int32{
		"ACTIVE":   0,
		"BOUNTIED": 1,
		"CLOSED":   2,
		"FLAGED":   3,
		"ARCHIVED": 4,
		"ANSWERED": 5,
	}
)

func (x PostStatus) Enum() *PostStatus {
	p := new(PostStatus)
	*p = x
	return p
}

func (x PostStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_event_stream_commands_schemas_schemas_proto_enumTypes[0].Descriptor()
}

func (PostStatus) Type() protoreflect.EnumType {
	return &file_event_stream_commands_schemas_schemas_proto_enumTypes[0]
}

func (x PostStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostStatus.Descriptor instead.
func (PostStatus) EnumDescriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{0}
}

type AddPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostDate    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=post_date,json=postDate,proto3" json:"post_date,omitempty"`
	Id          *UUID                  `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *UUID                  `protobuf:"bytes,3,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	Title       string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Description string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Status      PostStatus             `protobuf:"varint,6,opt,name=status,proto3,enum=commands.PostStatus" json:"status,omitempty"`
	PostTag     []*PostTag             `protobuf:"bytes,7,rep,name=PostTag,proto3" json:"PostTag,omitempty"`
	UserId      string                 `protobuf:"bytes,8,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *AddPost) Reset() {
	*x = AddPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPost) ProtoMessage() {}

func (x *AddPost) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPost.ProtoReflect.Descriptor instead.
func (*AddPost) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{0}
}

func (x *AddPost) GetPostDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PostDate
	}
	return nil
}

func (x *AddPost) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AddPost) GetAggregateId() *UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

func (x *AddPost) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddPost) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddPost) GetStatus() PostStatus {
	if x != nil {
		return x.Status
	}
	return PostStatus_ACTIVE
}

func (x *AddPost) GetPostTag() []*PostTag {
	if x != nil {
		return x.PostTag
	}
	return nil
}

func (x *AddPost) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UUID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UUID) Reset() {
	*x = UUID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UUID) ProtoMessage() {}

func (x *UUID) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UUID.ProtoReflect.Descriptor instead.
func (*UUID) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{1}
}

func (x *UUID) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type PostTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
}

func (x *PostTag) Reset() {
	*x = PostTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostTag) ProtoMessage() {}

func (x *PostTag) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostTag.ProtoReflect.Descriptor instead.
func (*PostTag) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{2}
}

func (x *PostTag) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label       string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Score       int64  `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{3}
}

func (x *Tag) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Tag) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Tag) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type PostAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostDate    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=post_date,json=postDate,proto3" json:"post_date,omitempty"`
	Body        string                 `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Author      string                 `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Id          *UUID                  `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *UUID                  `protobuf:"bytes,5,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
}

func (x *PostAnswer) Reset() {
	*x = PostAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostAnswer) ProtoMessage() {}

func (x *PostAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostAnswer.ProtoReflect.Descriptor instead.
func (*PostAnswer) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{4}
}

func (x *PostAnswer) GetPostDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PostDate
	}
	return nil
}

func (x *PostAnswer) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *PostAnswer) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *PostAnswer) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *PostAnswer) GetAggregateId() *UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

type AddRevisionToPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostDate    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=post_date,json=postDate,proto3" json:"post_date,omitempty"`
	Title       string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	EditSummary string                 `protobuf:"bytes,4,opt,name=edit_summary,json=editSummary,proto3" json:"edit_summary,omitempty"`
	AggregateId *UUID                  `protobuf:"bytes,5,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	Author      string                 `protobuf:"bytes,6,opt,name=author,proto3" json:"author,omitempty"`
	PostTag     []*PostTag             `protobuf:"bytes,7,rep,name=PostTag,proto3" json:"PostTag,omitempty"`
	Id          *UUID                  `protobuf:"bytes,8,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddRevisionToPost) Reset() {
	*x = AddRevisionToPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRevisionToPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRevisionToPost) ProtoMessage() {}

func (x *AddRevisionToPost) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRevisionToPost.ProtoReflect.Descriptor instead.
func (*AddRevisionToPost) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{5}
}

func (x *AddRevisionToPost) GetPostDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PostDate
	}
	return nil
}

func (x *AddRevisionToPost) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddRevisionToPost) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddRevisionToPost) GetEditSummary() string {
	if x != nil {
		return x.EditSummary
	}
	return ""
}

func (x *AddRevisionToPost) GetAggregateId() *UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

func (x *AddRevisionToPost) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *AddRevisionToPost) GetPostTag() []*PostTag {
	if x != nil {
		return x.PostTag
	}
	return nil
}

func (x *AddRevisionToPost) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

type AddRevisionToAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostDate    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=post_date,json=postDate,proto3" json:"post_date,omitempty"`
	Body        string                 `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Author      string                 `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Id          *UUID                  `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *UUID                  `protobuf:"bytes,5,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	EditSummary string                 `protobuf:"bytes,6,opt,name=edit_summary,json=editSummary,proto3" json:"edit_summary,omitempty"`
	AnswerId    string                 `protobuf:"bytes,7,opt,name=answer_id,json=answerId,proto3" json:"answer_id,omitempty"`
}

func (x *AddRevisionToAnswer) Reset() {
	*x = AddRevisionToAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRevisionToAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRevisionToAnswer) ProtoMessage() {}

func (x *AddRevisionToAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRevisionToAnswer.ProtoReflect.Descriptor instead.
func (*AddRevisionToAnswer) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{6}
}

func (x *AddRevisionToAnswer) GetPostDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PostDate
	}
	return nil
}

func (x *AddRevisionToAnswer) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *AddRevisionToAnswer) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *AddRevisionToAnswer) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AddRevisionToAnswer) GetAggregateId() *UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

func (x *AddRevisionToAnswer) GetEditSummary() string {
	if x != nil {
		return x.EditSummary
	}
	return ""
}

func (x *AddRevisionToAnswer) GetAnswerId() string {
	if x != nil {
		return x.AnswerId
	}
	return ""
}

type CommentOnPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostDate    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=post_date,json=postDate,proto3" json:"post_date,omitempty"`
	Body        string                 `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Author      string                 `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Id          *UUID                  `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *UUID                  `protobuf:"bytes,5,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	Reply       string                 `protobuf:"bytes,6,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *CommentOnPost) Reset() {
	*x = CommentOnPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentOnPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentOnPost) ProtoMessage() {}

func (x *CommentOnPost) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentOnPost.ProtoReflect.Descriptor instead.
func (*CommentOnPost) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{7}
}

func (x *CommentOnPost) GetPostDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PostDate
	}
	return nil
}

func (x *CommentOnPost) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *CommentOnPost) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *CommentOnPost) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *CommentOnPost) GetAggregateId() *UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

func (x *CommentOnPost) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

type CommentOnAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostDate    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=post_date,json=postDate,proto3" json:"post_date,omitempty"`
	Body        string                 `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Author      string                 `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Id          *UUID                  `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *UUID                  `protobuf:"bytes,5,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	Reply       string                 `protobuf:"bytes,6,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *CommentOnAnswer) Reset() {
	*x = CommentOnAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentOnAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentOnAnswer) ProtoMessage() {}

func (x *CommentOnAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentOnAnswer.ProtoReflect.Descriptor instead.
func (*CommentOnAnswer) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{8}
}

func (x *CommentOnAnswer) GetPostDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PostDate
	}
	return nil
}

func (x *CommentOnAnswer) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *CommentOnAnswer) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *CommentOnAnswer) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *CommentOnAnswer) GetAggregateId() *UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

func (x *CommentOnAnswer) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

type FlagComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostDate    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=post_date,json=postDate,proto3" json:"post_date,omitempty"`
	Reason      string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Author      string                 `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Id          *UUID                  `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *UUID                  `protobuf:"bytes,5,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	Details     string                 `protobuf:"bytes,6,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *FlagComment) Reset() {
	*x = FlagComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlagComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagComment) ProtoMessage() {}

func (x *FlagComment) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagComment.ProtoReflect.Descriptor instead.
func (*FlagComment) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{9}
}

func (x *FlagComment) GetPostDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PostDate
	}
	return nil
}

func (x *FlagComment) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *FlagComment) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *FlagComment) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *FlagComment) GetAggregateId() *UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

func (x *FlagComment) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type FlagAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostDate    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=post_date,json=postDate,proto3" json:"post_date,omitempty"`
	Reason      string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Author      string                 `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Id          *UUID                  `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *UUID                  `protobuf:"bytes,5,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	Details     string                 `protobuf:"bytes,6,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *FlagAnswer) Reset() {
	*x = FlagAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlagAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagAnswer) ProtoMessage() {}

func (x *FlagAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagAnswer.ProtoReflect.Descriptor instead.
func (*FlagAnswer) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{10}
}

func (x *FlagAnswer) GetPostDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PostDate
	}
	return nil
}

func (x *FlagAnswer) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *FlagAnswer) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *FlagAnswer) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *FlagAnswer) GetAggregateId() *UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

func (x *FlagAnswer) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type FlagPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostDate    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=post_date,json=postDate,proto3" json:"post_date,omitempty"`
	Reason      string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Author      string                 `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Id          *UUID                  `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *UUID                  `protobuf:"bytes,5,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	Details     string                 `protobuf:"bytes,6,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *FlagPost) Reset() {
	*x = FlagPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlagPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagPost) ProtoMessage() {}

func (x *FlagPost) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagPost.ProtoReflect.Descriptor instead.
func (*FlagPost) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{11}
}

func (x *FlagPost) GetPostDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PostDate
	}
	return nil
}

func (x *FlagPost) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *FlagPost) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *FlagPost) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *FlagPost) GetAggregateId() *UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

func (x *FlagPost) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type RetractFlagPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostDate    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=post_date,json=postDate,proto3" json:"post_date,omitempty"`
	Id          *UUID                  `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Author      string                 `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	AggregateId *UUID                  `protobuf:"bytes,4,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
}

func (x *RetractFlagPost) Reset() {
	*x = RetractFlagPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetractFlagPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetractFlagPost) ProtoMessage() {}

func (x *RetractFlagPost) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetractFlagPost.ProtoReflect.Descriptor instead.
func (*RetractFlagPost) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{12}
}

func (x *RetractFlagPost) GetPostDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PostDate
	}
	return nil
}

func (x *RetractFlagPost) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RetractFlagPost) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *RetractFlagPost) GetAggregateId() *UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

type RetractFlagAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostDate    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=post_date,json=postDate,proto3" json:"post_date,omitempty"`
	Id          *UUID                  `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Author      string                 `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	AggregateId *UUID                  `protobuf:"bytes,4,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
}

func (x *RetractFlagAnswer) Reset() {
	*x = RetractFlagAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetractFlagAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetractFlagAnswer) ProtoMessage() {}

func (x *RetractFlagAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetractFlagAnswer.ProtoReflect.Descriptor instead.
func (*RetractFlagAnswer) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{13}
}

func (x *RetractFlagAnswer) GetPostDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PostDate
	}
	return nil
}

func (x *RetractFlagAnswer) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RetractFlagAnswer) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *RetractFlagAnswer) GetAggregateId() *UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

type RetractFlagComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostDate    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=post_date,json=postDate,proto3" json:"post_date,omitempty"`
	Id          *UUID                  `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Author      string                 `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	AggregateId *UUID                  `protobuf:"bytes,4,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
}

func (x *RetractFlagComment) Reset() {
	*x = RetractFlagComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetractFlagComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetractFlagComment) ProtoMessage() {}

func (x *RetractFlagComment) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetractFlagComment.ProtoReflect.Descriptor instead.
func (*RetractFlagComment) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{14}
}

func (x *RetractFlagComment) GetPostDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PostDate
	}
	return nil
}

func (x *RetractFlagComment) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RetractFlagComment) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *RetractFlagComment) GetAggregateId() *UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

type VoteUpPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cast        *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=cast,proto3" json:"cast,omitempty"`
	VoterId     string                 `protobuf:"bytes,2,opt,name=voter_id,json=voterId,proto3" json:"voter_id,omitempty"`
	Id          *UUID                  `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *UUID                  `protobuf:"bytes,4,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
}

func (x *VoteUpPost) Reset() {
	*x = VoteUpPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteUpPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteUpPost) ProtoMessage() {}

func (x *VoteUpPost) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteUpPost.ProtoReflect.Descriptor instead.
func (*VoteUpPost) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{15}
}

func (x *VoteUpPost) GetCast() *timestamppb.Timestamp {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *VoteUpPost) GetVoterId() string {
	if x != nil {
		return x.VoterId
	}
	return ""
}

func (x *VoteUpPost) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *VoteUpPost) GetAggregateId() *UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

type RetractVoteUpPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cast        *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=cast,proto3" json:"cast,omitempty"`
	VoterId     string                 `protobuf:"bytes,2,opt,name=voter_id,json=voterId,proto3" json:"voter_id,omitempty"`
	Id          *UUID                  `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *UUID                  `protobuf:"bytes,4,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
}

func (x *RetractVoteUpPost) Reset() {
	*x = RetractVoteUpPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetractVoteUpPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetractVoteUpPost) ProtoMessage() {}

func (x *RetractVoteUpPost) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetractVoteUpPost.ProtoReflect.Descriptor instead.
func (*RetractVoteUpPost) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{16}
}

func (x *RetractVoteUpPost) GetCast() *timestamppb.Timestamp {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *RetractVoteUpPost) GetVoterId() string {
	if x != nil {
		return x.VoterId
	}
	return ""
}

func (x *RetractVoteUpPost) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RetractVoteUpPost) GetAggregateId() *UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

type VoteDownPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cast        *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=cast,proto3" json:"cast,omitempty"`
	VoterId     string                 `protobuf:"bytes,2,opt,name=voter_id,json=voterId,proto3" json:"voter_id,omitempty"`
	Id          *UUID                  `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *UUID                  `protobuf:"bytes,4,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
}

func (x *VoteDownPost) Reset() {
	*x = VoteDownPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteDownPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteDownPost) ProtoMessage() {}

func (x *VoteDownPost) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteDownPost.ProtoReflect.Descriptor instead.
func (*VoteDownPost) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{17}
}

func (x *VoteDownPost) GetCast() *timestamppb.Timestamp {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *VoteDownPost) GetVoterId() string {
	if x != nil {
		return x.VoterId
	}
	return ""
}

func (x *VoteDownPost) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *VoteDownPost) GetAggregateId() *UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

type RetractVoteDownPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cast        *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=cast,proto3" json:"cast,omitempty"`
	VoterId     string                 `protobuf:"bytes,2,opt,name=voter_id,json=voterId,proto3" json:"voter_id,omitempty"`
	Id          *UUID                  `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *UUID                  `protobuf:"bytes,4,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
}

func (x *RetractVoteDownPost) Reset() {
	*x = RetractVoteDownPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetractVoteDownPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetractVoteDownPost) ProtoMessage() {}

func (x *RetractVoteDownPost) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetractVoteDownPost.ProtoReflect.Descriptor instead.
func (*RetractVoteDownPost) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{18}
}

func (x *RetractVoteDownPost) GetCast() *timestamppb.Timestamp {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *RetractVoteDownPost) GetVoterId() string {
	if x != nil {
		return x.VoterId
	}
	return ""
}

func (x *RetractVoteDownPost) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RetractVoteDownPost) GetAggregateId() *UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

type VoteUpAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cast     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=cast,proto3" json:"cast,omitempty"`
	VoterId  string                 `protobuf:"bytes,2,opt,name=voter_id,json=voterId,proto3" json:"voter_id,omitempty"`
	Id       *UUID                  `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	AnswerId *UUID                  `protobuf:"bytes,5,opt,name=answer_id,json=answerId,proto3" json:"answer_id,omitempty"`
}

func (x *VoteUpAnswer) Reset() {
	*x = VoteUpAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteUpAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteUpAnswer) ProtoMessage() {}

func (x *VoteUpAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteUpAnswer.ProtoReflect.Descriptor instead.
func (*VoteUpAnswer) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{19}
}

func (x *VoteUpAnswer) GetCast() *timestamppb.Timestamp {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *VoteUpAnswer) GetVoterId() string {
	if x != nil {
		return x.VoterId
	}
	return ""
}

func (x *VoteUpAnswer) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *VoteUpAnswer) GetAnswerId() *UUID {
	if x != nil {
		return x.AnswerId
	}
	return nil
}

type RetractVoteUpAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cast     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=cast,proto3" json:"cast,omitempty"`
	VoterId  string                 `protobuf:"bytes,2,opt,name=voter_id,json=voterId,proto3" json:"voter_id,omitempty"`
	Id       *UUID                  `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	AnswerId *UUID                  `protobuf:"bytes,5,opt,name=answer_id,json=answerId,proto3" json:"answer_id,omitempty"`
}

func (x *RetractVoteUpAnswer) Reset() {
	*x = RetractVoteUpAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetractVoteUpAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetractVoteUpAnswer) ProtoMessage() {}

func (x *RetractVoteUpAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetractVoteUpAnswer.ProtoReflect.Descriptor instead.
func (*RetractVoteUpAnswer) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{20}
}

func (x *RetractVoteUpAnswer) GetCast() *timestamppb.Timestamp {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *RetractVoteUpAnswer) GetVoterId() string {
	if x != nil {
		return x.VoterId
	}
	return ""
}

func (x *RetractVoteUpAnswer) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RetractVoteUpAnswer) GetAnswerId() *UUID {
	if x != nil {
		return x.AnswerId
	}
	return nil
}

type VoteDownAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cast     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=cast,proto3" json:"cast,omitempty"`
	VoterId  string                 `protobuf:"bytes,2,opt,name=voter_id,json=voterId,proto3" json:"voter_id,omitempty"`
	Id       *UUID                  `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	AnswerId *UUID                  `protobuf:"bytes,5,opt,name=answer_id,json=answerId,proto3" json:"answer_id,omitempty"`
}

func (x *VoteDownAnswer) Reset() {
	*x = VoteDownAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteDownAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteDownAnswer) ProtoMessage() {}

func (x *VoteDownAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteDownAnswer.ProtoReflect.Descriptor instead.
func (*VoteDownAnswer) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{21}
}

func (x *VoteDownAnswer) GetCast() *timestamppb.Timestamp {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *VoteDownAnswer) GetVoterId() string {
	if x != nil {
		return x.VoterId
	}
	return ""
}

func (x *VoteDownAnswer) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *VoteDownAnswer) GetAnswerId() *UUID {
	if x != nil {
		return x.AnswerId
	}
	return nil
}

type RetractVoteDownAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cast     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=cast,proto3" json:"cast,omitempty"`
	VoterId  string                 `protobuf:"bytes,2,opt,name=voter_id,json=voterId,proto3" json:"voter_id,omitempty"`
	Id       *UUID                  `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	AnswerId *UUID                  `protobuf:"bytes,5,opt,name=answer_id,json=answerId,proto3" json:"answer_id,omitempty"`
}

func (x *RetractVoteDownAnswer) Reset() {
	*x = RetractVoteDownAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetractVoteDownAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetractVoteDownAnswer) ProtoMessage() {}

func (x *RetractVoteDownAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetractVoteDownAnswer.ProtoReflect.Descriptor instead.
func (*RetractVoteDownAnswer) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{22}
}

func (x *RetractVoteDownAnswer) GetCast() *timestamppb.Timestamp {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *RetractVoteDownAnswer) GetVoterId() string {
	if x != nil {
		return x.VoterId
	}
	return ""
}

func (x *RetractVoteDownAnswer) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RetractVoteDownAnswer) GetAnswerId() *UUID {
	if x != nil {
		return x.AnswerId
	}
	return nil
}

type VoteUpComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cast        *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=cast,proto3" json:"cast,omitempty"`
	VoterId     string                 `protobuf:"bytes,2,opt,name=voter_id,json=voterId,proto3" json:"voter_id,omitempty"`
	Id          *UUID                  `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *UUID                  `protobuf:"bytes,4,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	CommentId   *UUID                  `protobuf:"bytes,5,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
}

func (x *VoteUpComment) Reset() {
	*x = VoteUpComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteUpComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteUpComment) ProtoMessage() {}

func (x *VoteUpComment) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteUpComment.ProtoReflect.Descriptor instead.
func (*VoteUpComment) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{23}
}

func (x *VoteUpComment) GetCast() *timestamppb.Timestamp {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *VoteUpComment) GetVoterId() string {
	if x != nil {
		return x.VoterId
	}
	return ""
}

func (x *VoteUpComment) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *VoteUpComment) GetAggregateId() *UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

func (x *VoteUpComment) GetCommentId() *UUID {
	if x != nil {
		return x.CommentId
	}
	return nil
}

type RetractVoteUpComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cast        *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=cast,proto3" json:"cast,omitempty"`
	VoterId     string                 `protobuf:"bytes,2,opt,name=voter_id,json=voterId,proto3" json:"voter_id,omitempty"`
	Id          *UUID                  `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *UUID                  `protobuf:"bytes,4,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	CommentId   *UUID                  `protobuf:"bytes,5,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
}

func (x *RetractVoteUpComment) Reset() {
	*x = RetractVoteUpComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetractVoteUpComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetractVoteUpComment) ProtoMessage() {}

func (x *RetractVoteUpComment) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetractVoteUpComment.ProtoReflect.Descriptor instead.
func (*RetractVoteUpComment) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{24}
}

func (x *RetractVoteUpComment) GetCast() *timestamppb.Timestamp {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *RetractVoteUpComment) GetVoterId() string {
	if x != nil {
		return x.VoterId
	}
	return ""
}

func (x *RetractVoteUpComment) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RetractVoteUpComment) GetAggregateId() *UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

func (x *RetractVoteUpComment) GetCommentId() *UUID {
	if x != nil {
		return x.CommentId
	}
	return nil
}

type AcceptAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cast        *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=cast,proto3" json:"cast,omitempty"`
	VoterId     string                 `protobuf:"bytes,2,opt,name=voter_id,json=voterId,proto3" json:"voter_id,omitempty"`
	Id          *UUID                  `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *UUID                  `protobuf:"bytes,4,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	AnswerId    *UUID                  `protobuf:"bytes,5,opt,name=answer_id,json=answerId,proto3" json:"answer_id,omitempty"`
}

func (x *AcceptAnswer) Reset() {
	*x = AcceptAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptAnswer) ProtoMessage() {}

func (x *AcceptAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptAnswer.ProtoReflect.Descriptor instead.
func (*AcceptAnswer) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{25}
}

func (x *AcceptAnswer) GetCast() *timestamppb.Timestamp {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *AcceptAnswer) GetVoterId() string {
	if x != nil {
		return x.VoterId
	}
	return ""
}

func (x *AcceptAnswer) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AcceptAnswer) GetAggregateId() *UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

func (x *AcceptAnswer) GetAnswerId() *UUID {
	if x != nil {
		return x.AnswerId
	}
	return nil
}

type RetractAcceptAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cast        *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=cast,proto3" json:"cast,omitempty"`
	VoterId     string                 `protobuf:"bytes,2,opt,name=voter_id,json=voterId,proto3" json:"voter_id,omitempty"`
	Id          *UUID                  `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *UUID                  `protobuf:"bytes,4,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	AnswerId    *UUID                  `protobuf:"bytes,5,opt,name=answer_id,json=answerId,proto3" json:"answer_id,omitempty"`
}

func (x *RetractAcceptAnswer) Reset() {
	*x = RetractAcceptAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetractAcceptAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetractAcceptAnswer) ProtoMessage() {}

func (x *RetractAcceptAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_commands_schemas_schemas_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetractAcceptAnswer.ProtoReflect.Descriptor instead.
func (*RetractAcceptAnswer) Descriptor() ([]byte, []int) {
	return file_event_stream_commands_schemas_schemas_proto_rawDescGZIP(), []int{26}
}

func (x *RetractAcceptAnswer) GetCast() *timestamppb.Timestamp {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *RetractAcceptAnswer) GetVoterId() string {
	if x != nil {
		return x.VoterId
	}
	return ""
}

func (x *RetractAcceptAnswer) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RetractAcceptAnswer) GetAggregateId() *UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

func (x *RetractAcceptAnswer) GetAnswerId() *UUID {
	if x != nil {
		return x.AnswerId
	}
	return nil
}

var File_event_stream_commands_schemas_schemas_proto protoreflect.FileDescriptor

var file_event_stream_commands_schemas_schemas_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc1, 0x02, 0x0a, 0x07, 0x41, 0x64, 0x64,
	0x50, 0x6f, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a,
	0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55,
	0x55, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x61,
	0x67, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x61, 0x67, 0x52, 0x07, 0x50, 0x6f, 0x73, 0x74,
	0x54, 0x61, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1c, 0x0a, 0x04,
	0x55, 0x55, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1f, 0x0a, 0x07, 0x50, 0x6f,
	0x73, 0x74, 0x54, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x53, 0x0a, 0x03, 0x54,
	0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xc4, 0x01, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12,
	0x37, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08,
	0x70, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0xbf, 0x02, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x37, 0x0a,
	0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x70, 0x6f,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x64, 0x69, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x31, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x07,
	0x50, 0x6f, 0x73, 0x74, 0x54, 0x61, 0x67, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x61, 0x67,
	0x52, 0x07, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73,
	0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8d, 0x02, 0x0a, 0x13, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x12, 0x37, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55,
	0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x64, 0x69,
	0x74, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x65, 0x64, 0x69, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x22, 0xdd, 0x01, 0x0a, 0x0d, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x70,
	0x6f, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x31, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xdf, 0x01, 0x0a, 0x0f, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x37, 0x0a,
	0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x70, 0x6f,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x31, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xe3, 0x01, 0x0a, 0x0b,
	0x46, 0x6c, 0x61, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x70,
	0x6f, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0xe2, 0x01, 0x0a, 0x0a, 0x46, 0x6c, 0x61, 0x67, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x12, 0x37, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73,
	0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0c, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52,
	0x0b, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xe0, 0x01, 0x0a, 0x08, 0x46, 0x6c, 0x61, 0x67, 0x50,
	0x6f, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0c,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55,
	0x49, 0x44, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x0f, 0x52, 0x65,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x37, 0x0a,
	0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x70, 0x6f,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55,
	0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x31,
	0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e,
	0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x22, 0xb7, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x74, 0x72, 0x61, 0x63, 0x74, 0x46, 0x6c, 0x61,
	0x67, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0xb8, 0x01, 0x0a, 0x12,
	0x52, 0x65, 0x74, 0x72, 0x61, 0x63, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0xaa, 0x01, 0x0a, 0x0a, 0x56, 0x6f, 0x74, 0x65, 0x55,
	0x70, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x63, 0x61, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x04, 0x63, 0x61, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x31, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x22, 0xb1, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x74, 0x72, 0x61, 0x63, 0x74, 0x56,
	0x6f, 0x74, 0x65, 0x55, 0x70, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x63, 0x61, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x04, 0x63, 0x61, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x6f, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x6f, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0xac, 0x01, 0x0a, 0x0c, 0x56, 0x6f, 0x74, 0x65,
	0x44, 0x6f, 0x77, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x63, 0x61, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x04, 0x63, 0x61, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x6f, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x6f, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x2e,
	0x0a, 0x04, 0x63, 0x61, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x63, 0x61, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73,
	0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0c, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52,
	0x0b, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0xa6, 0x01, 0x0a,
	0x0c, 0x56, 0x6f, 0x74, 0x65, 0x55, 0x70, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x2e, 0x0a,
	0x04, 0x63, 0x61, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x63, 0x61, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e,
	0x55, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x08, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x49, 0x64, 0x22, 0xad, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x56, 0x6f, 0x74, 0x65, 0x55, 0x70, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x2e, 0x0a,
	0x04, 0x63, 0x61, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x63, 0x61, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e,
	0x55, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x08, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x49, 0x64, 0x22, 0xa8, 0x01, 0x0a, 0x0e, 0x56, 0x6f, 0x74, 0x65, 0x44, 0x6f,
	0x77, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x04, 0x63, 0x61, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x04, 0x63, 0x61, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x6f, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x6f, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x08, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64,
	0x22, 0xaf, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x74, 0x72, 0x61, 0x63, 0x74, 0x56, 0x6f, 0x74, 0x65,
	0x44, 0x6f, 0x77, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x04, 0x63, 0x61,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x63, 0x61, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x6f,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x6f,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49,
	0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x08, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x49, 0x64, 0x22, 0xdc, 0x01, 0x0a, 0x0d, 0x56, 0x6f, 0x74, 0x65, 0x55, 0x70, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x63, 0x61, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04,
	0x63, 0x61, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x31, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73,
	0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0xe3, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x74, 0x72, 0x61, 0x63, 0x74, 0x56, 0x6f, 0x74,
	0x65, 0x55, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x63, 0x61,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x63, 0x61, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x6f,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x6f,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49,
	0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xd9, 0x01, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x04, 0x63, 0x61, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x04, 0x63, 0x61, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x6f, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x6f, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x08, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xe0, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x04, 0x63,
	0x61, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x63, 0x61, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76,
	0x6f, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x6f, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55,
	0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x08, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x2a, 0x5a, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x00,
	0x12, 0x0c, 0x0a, 0x08, 0x42, 0x4f, 0x55, 0x4e, 0x54, 0x49, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x4c,
	0x41, 0x47, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56,
	0x45, 0x44, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x4e, 0x53, 0x57, 0x45, 0x52, 0x45, 0x44,
	0x10, 0x05, 0x42, 0x50, 0x5a, 0x4e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6c, 0x65, 0x2d, 0x63, 0x6f, 0x69, 0x6e, 0x2d, 0x64, 0x65, 0x73, 0x2d, 0x65, 0x6e, 0x74,
	0x72, 0x65, 0x70, 0x72, 0x65, 0x6e, 0x65, 0x75, 0x72, 0x73, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2d, 0x61, 0x70, 0x70, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2f, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_event_stream_commands_schemas_schemas_proto_rawDescOnce sync.Once
	file_event_stream_commands_schemas_schemas_proto_rawDescData = file_event_stream_commands_schemas_schemas_proto_rawDesc
)

func file_event_stream_commands_schemas_schemas_proto_rawDescGZIP() []byte {
	file_event_stream_commands_schemas_schemas_proto_rawDescOnce.Do(func() {
		file_event_stream_commands_schemas_schemas_proto_rawDescData = protoimpl.X.CompressGZIP(file_event_stream_commands_schemas_schemas_proto_rawDescData)
	})
	return file_event_stream_commands_schemas_schemas_proto_rawDescData
}

var file_event_stream_commands_schemas_schemas_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_event_stream_commands_schemas_schemas_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_event_stream_commands_schemas_schemas_proto_goTypes = []interface{}{
	(PostStatus)(0),               // 0: commands.PostStatus
	(*AddPost)(nil),               // 1: commands.AddPost
	(*UUID)(nil),                  // 2: commands.UUID
	(*PostTag)(nil),               // 3: commands.PostTag
	(*Tag)(nil),                   // 4: commands.Tag
	(*PostAnswer)(nil),            // 5: commands.PostAnswer
	(*AddRevisionToPost)(nil),     // 6: commands.AddRevisionToPost
	(*AddRevisionToAnswer)(nil),   // 7: commands.AddRevisionToAnswer
	(*CommentOnPost)(nil),         // 8: commands.CommentOnPost
	(*CommentOnAnswer)(nil),       // 9: commands.CommentOnAnswer
	(*FlagComment)(nil),           // 10: commands.FlagComment
	(*FlagAnswer)(nil),            // 11: commands.FlagAnswer
	(*FlagPost)(nil),              // 12: commands.FlagPost
	(*RetractFlagPost)(nil),       // 13: commands.RetractFlagPost
	(*RetractFlagAnswer)(nil),     // 14: commands.RetractFlagAnswer
	(*RetractFlagComment)(nil),    // 15: commands.RetractFlagComment
	(*VoteUpPost)(nil),            // 16: commands.VoteUpPost
	(*RetractVoteUpPost)(nil),     // 17: commands.RetractVoteUpPost
	(*VoteDownPost)(nil),          // 18: commands.VoteDownPost
	(*RetractVoteDownPost)(nil),   // 19: commands.RetractVoteDownPost
	(*VoteUpAnswer)(nil),          // 20: commands.VoteUpAnswer
	(*RetractVoteUpAnswer)(nil),   // 21: commands.RetractVoteUpAnswer
	(*VoteDownAnswer)(nil),        // 22: commands.VoteDownAnswer
	(*RetractVoteDownAnswer)(nil), // 23: commands.RetractVoteDownAnswer
	(*VoteUpComment)(nil),         // 24: commands.VoteUpComment
	(*RetractVoteUpComment)(nil),  // 25: commands.RetractVoteUpComment
	(*AcceptAnswer)(nil),          // 26: commands.AcceptAnswer
	(*RetractAcceptAnswer)(nil),   // 27: commands.RetractAcceptAnswer
	(*timestamppb.Timestamp)(nil), // 28: google.protobuf.Timestamp
}
var file_event_stream_commands_schemas_schemas_proto_depIdxs = []int32{
	28, // 0: commands.AddPost.post_date:type_name -> google.protobuf.Timestamp
	2,  // 1: commands.AddPost.id:type_name -> commands.UUID
	2,  // 2: commands.AddPost.aggregate_id:type_name -> commands.UUID
	0,  // 3: commands.AddPost.status:type_name -> commands.PostStatus
	3,  // 4: commands.AddPost.PostTag:type_name -> commands.PostTag
	28, // 5: commands.PostAnswer.post_date:type_name -> google.protobuf.Timestamp
	2,  // 6: commands.PostAnswer.id:type_name -> commands.UUID
	2,  // 7: commands.PostAnswer.aggregate_id:type_name -> commands.UUID
	28, // 8: commands.AddRevisionToPost.post_date:type_name -> google.protobuf.Timestamp
	2,  // 9: commands.AddRevisionToPost.aggregate_id:type_name -> commands.UUID
	3,  // 10: commands.AddRevisionToPost.PostTag:type_name -> commands.PostTag
	2,  // 11: commands.AddRevisionToPost.id:type_name -> commands.UUID
	28, // 12: commands.AddRevisionToAnswer.post_date:type_name -> google.protobuf.Timestamp
	2,  // 13: commands.AddRevisionToAnswer.id:type_name -> commands.UUID
	2,  // 14: commands.AddRevisionToAnswer.aggregate_id:type_name -> commands.UUID
	28, // 15: commands.CommentOnPost.post_date:type_name -> google.protobuf.Timestamp
	2,  // 16: commands.CommentOnPost.id:type_name -> commands.UUID
	2,  // 17: commands.CommentOnPost.aggregate_id:type_name -> commands.UUID
	28, // 18: commands.CommentOnAnswer.post_date:type_name -> google.protobuf.Timestamp
	2,  // 19: commands.CommentOnAnswer.id:type_name -> commands.UUID
	2,  // 20: commands.CommentOnAnswer.aggregate_id:type_name -> commands.UUID
	28, // 21: commands.FlagComment.post_date:type_name -> google.protobuf.Timestamp
	2,  // 22: commands.FlagComment.id:type_name -> commands.UUID
	2,  // 23: commands.FlagComment.aggregate_id:type_name -> commands.UUID
	28, // 24: commands.FlagAnswer.post_date:type_name -> google.protobuf.Timestamp
	2,  // 25: commands.FlagAnswer.id:type_name -> commands.UUID
	2,  // 26: commands.FlagAnswer.aggregate_id:type_name -> commands.UUID
	28, // 27: commands.FlagPost.post_date:type_name -> google.protobuf.Timestamp
	2,  // 28: commands.FlagPost.id:type_name -> commands.UUID
	2,  // 29: commands.FlagPost.aggregate_id:type_name -> commands.UUID
	28, // 30: commands.RetractFlagPost.post_date:type_name -> google.protobuf.Timestamp
	2,  // 31: commands.RetractFlagPost.id:type_name -> commands.UUID
	2,  // 32: commands.RetractFlagPost.aggregate_id:type_name -> commands.UUID
	28, // 33: commands.RetractFlagAnswer.post_date:type_name -> google.protobuf.Timestamp
	2,  // 34: commands.RetractFlagAnswer.id:type_name -> commands.UUID
	2,  // 35: commands.RetractFlagAnswer.aggregate_id:type_name -> commands.UUID
	28, // 36: commands.RetractFlagComment.post_date:type_name -> google.protobuf.Timestamp
	2,  // 37: commands.RetractFlagComment.id:type_name -> commands.UUID
	2,  // 38: commands.RetractFlagComment.aggregate_id:type_name -> commands.UUID
	28, // 39: commands.VoteUpPost.cast:type_name -> google.protobuf.Timestamp
	2,  // 40: commands.VoteUpPost.id:type_name -> commands.UUID
	2,  // 41: commands.VoteUpPost.aggregate_id:type_name -> commands.UUID
	28, // 42: commands.RetractVoteUpPost.cast:type_name -> google.protobuf.Timestamp
	2,  // 43: commands.RetractVoteUpPost.id:type_name -> commands.UUID
	2,  // 44: commands.RetractVoteUpPost.aggregate_id:type_name -> commands.UUID
	28, // 45: commands.VoteDownPost.cast:type_name -> google.protobuf.Timestamp
	2,  // 46: commands.VoteDownPost.id:type_name -> commands.UUID
	2,  // 47: commands.VoteDownPost.aggregate_id:type_name -> commands.UUID
	28, // 48: commands.RetractVoteDownPost.cast:type_name -> google.protobuf.Timestamp
	2,  // 49: commands.RetractVoteDownPost.id:type_name -> commands.UUID
	2,  // 50: commands.RetractVoteDownPost.aggregate_id:type_name -> commands.UUID
	28, // 51: commands.VoteUpAnswer.cast:type_name -> google.protobuf.Timestamp
	2,  // 52: commands.VoteUpAnswer.id:type_name -> commands.UUID
	2,  // 53: commands.VoteUpAnswer.answer_id:type_name -> commands.UUID
	28, // 54: commands.RetractVoteUpAnswer.cast:type_name -> google.protobuf.Timestamp
	2,  // 55: commands.RetractVoteUpAnswer.id:type_name -> commands.UUID
	2,  // 56: commands.RetractVoteUpAnswer.answer_id:type_name -> commands.UUID
	28, // 57: commands.VoteDownAnswer.cast:type_name -> google.protobuf.Timestamp
	2,  // 58: commands.VoteDownAnswer.id:type_name -> commands.UUID
	2,  // 59: commands.VoteDownAnswer.answer_id:type_name -> commands.UUID
	28, // 60: commands.RetractVoteDownAnswer.cast:type_name -> google.protobuf.Timestamp
	2,  // 61: commands.RetractVoteDownAnswer.id:type_name -> commands.UUID
	2,  // 62: commands.RetractVoteDownAnswer.answer_id:type_name -> commands.UUID
	28, // 63: commands.VoteUpComment.cast:type_name -> google.protobuf.Timestamp
	2,  // 64: commands.VoteUpComment.id:type_name -> commands.UUID
	2,  // 65: commands.VoteUpComment.aggregate_id:type_name -> commands.UUID
	2,  // 66: commands.VoteUpComment.comment_id:type_name -> commands.UUID
	28, // 67: commands.RetractVoteUpComment.cast:type_name -> google.protobuf.Timestamp
	2,  // 68: commands.RetractVoteUpComment.id:type_name -> commands.UUID
	2,  // 69: commands.RetractVoteUpComment.aggregate_id:type_name -> commands.UUID
	2,  // 70: commands.RetractVoteUpComment.comment_id:type_name -> commands.UUID
	28, // 71: commands.AcceptAnswer.cast:type_name -> google.protobuf.Timestamp
	2,  // 72: commands.AcceptAnswer.id:type_name -> commands.UUID
	2,  // 73: commands.AcceptAnswer.aggregate_id:type_name -> commands.UUID
	2,  // 74: commands.AcceptAnswer.answer_id:type_name -> commands.UUID
	28, // 75: commands.RetractAcceptAnswer.cast:type_name -> google.protobuf.Timestamp
	2,  // 76: commands.RetractAcceptAnswer.id:type_name -> commands.UUID
	2,  // 77: commands.RetractAcceptAnswer.aggregate_id:type_name -> commands.UUID
	2,  // 78: commands.RetractAcceptAnswer.answer_id:type_name -> commands.UUID
	79, // [79:79] is the sub-list for method output_type
	79, // [79:79] is the sub-list for method input_type
	79, // [79:79] is the sub-list for extension type_name
	79, // [79:79] is the sub-list for extension extendee
	0,  // [0:79] is the sub-list for field type_name
}

func init() { file_event_stream_commands_schemas_schemas_proto_init() }
func file_event_stream_commands_schemas_schemas_proto_init() {
	if File_event_stream_commands_schemas_schemas_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_event_stream_commands_schemas_schemas_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_commands_schemas_schemas_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UUID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_commands_schemas_schemas_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_commands_schemas_schemas_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_commands_schemas_schemas_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_commands_schemas_schemas_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRevisionToPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_commands_schemas_schemas_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRevisionToAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_commands_schemas_schemas_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentOnPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_commands_schemas_schemas_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentOnAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_commands_schemas_schemas_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlagComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_commands_schemas_schemas_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlagAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_commands_schemas_schemas_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlagPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_commands_schemas_schemas_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetractFlagPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_commands_schemas_schemas_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetractFlagAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_commands_schemas_schemas_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetractFlagComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_commands_schemas_schemas_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteUpPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_commands_schemas_schemas_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetractVoteUpPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_commands_schemas_schemas_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteDownPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_commands_schemas_schemas_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetractVoteDownPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_commands_schemas_schemas_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteUpAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_commands_schemas_schemas_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetractVoteUpAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_commands_schemas_schemas_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteDownAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_commands_schemas_schemas_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetractVoteDownAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_commands_schemas_schemas_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteUpComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_commands_schemas_schemas_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetractVoteUpComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_commands_schemas_schemas_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_commands_schemas_schemas_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetractAcceptAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_event_stream_commands_schemas_schemas_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_event_stream_commands_schemas_schemas_proto_goTypes,
		DependencyIndexes: file_event_stream_commands_schemas_schemas_proto_depIdxs,
		EnumInfos:         file_event_stream_commands_schemas_schemas_proto_enumTypes,
		MessageInfos:      file_event_stream_commands_schemas_schemas_proto_msgTypes,
	}.Build()
	File_event_stream_commands_schemas_schemas_proto = out.File
	file_event_stream_commands_schemas_schemas_proto_rawDesc = nil
	file_event_stream_commands_schemas_schemas_proto_goTypes = nil
	file_event_stream_commands_schemas_schemas_proto_depIdxs = nil
}
