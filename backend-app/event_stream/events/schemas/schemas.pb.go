// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: event_stream/events/schemas/schemas.proto

package schemas

import (
	schemas "gitlab.com/le-coin-des-entrepreneurs/backend-app/event_stream/commands/schemas"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PostAdded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *schemas.UUID          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *schemas.UUID          `protobuf:"bytes,2,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	PostTag     []*schemas.PostTag     `protobuf:"bytes,3,rep,name=PostTag,proto3" json:"PostTag,omitempty"`
	PostDate    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=post_date,json=postDate,proto3" json:"post_date,omitempty"`
}

func (x *PostAdded) Reset() {
	*x = PostAdded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_events_schemas_schemas_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostAdded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostAdded) ProtoMessage() {}

func (x *PostAdded) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_events_schemas_schemas_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostAdded.ProtoReflect.Descriptor instead.
func (*PostAdded) Descriptor() ([]byte, []int) {
	return file_event_stream_events_schemas_schemas_proto_rawDescGZIP(), []int{0}
}

func (x *PostAdded) GetId() *schemas.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *PostAdded) GetAggregateId() *schemas.UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

func (x *PostAdded) GetPostTag() []*schemas.PostTag {
	if x != nil {
		return x.PostTag
	}
	return nil
}

func (x *PostAdded) GetPostDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PostDate
	}
	return nil
}

type PostAnswerAdded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *schemas.UUID          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *schemas.UUID          `protobuf:"bytes,2,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	AnswerId    string                 `protobuf:"bytes,3,opt,name=answer_id,json=answerId,proto3" json:"answer_id,omitempty"`
	PostDate    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=post_date,json=postDate,proto3" json:"post_date,omitempty"`
}

func (x *PostAnswerAdded) Reset() {
	*x = PostAnswerAdded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_events_schemas_schemas_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostAnswerAdded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostAnswerAdded) ProtoMessage() {}

func (x *PostAnswerAdded) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_events_schemas_schemas_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostAnswerAdded.ProtoReflect.Descriptor instead.
func (*PostAnswerAdded) Descriptor() ([]byte, []int) {
	return file_event_stream_events_schemas_schemas_proto_rawDescGZIP(), []int{1}
}

func (x *PostAnswerAdded) GetId() *schemas.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *PostAnswerAdded) GetAggregateId() *schemas.UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

func (x *PostAnswerAdded) GetAnswerId() string {
	if x != nil {
		return x.AnswerId
	}
	return ""
}

func (x *PostAnswerAdded) GetPostDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PostDate
	}
	return nil
}

type PostRevisionAdded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *schemas.UUID          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *schemas.UUID          `protobuf:"bytes,2,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	PostDate    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=post_date,json=postDate,proto3" json:"post_date,omitempty"`
}

func (x *PostRevisionAdded) Reset() {
	*x = PostRevisionAdded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_events_schemas_schemas_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostRevisionAdded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostRevisionAdded) ProtoMessage() {}

func (x *PostRevisionAdded) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_events_schemas_schemas_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostRevisionAdded.ProtoReflect.Descriptor instead.
func (*PostRevisionAdded) Descriptor() ([]byte, []int) {
	return file_event_stream_events_schemas_schemas_proto_rawDescGZIP(), []int{2}
}

func (x *PostRevisionAdded) GetId() *schemas.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *PostRevisionAdded) GetAggregateId() *schemas.UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

func (x *PostRevisionAdded) GetPostDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PostDate
	}
	return nil
}

type AnswerRevisionAdded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *schemas.UUID          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *schemas.UUID          `protobuf:"bytes,2,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	AnswerId    string                 `protobuf:"bytes,3,opt,name=answer_id,json=answerId,proto3" json:"answer_id,omitempty"`
	Updated     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *AnswerRevisionAdded) Reset() {
	*x = AnswerRevisionAdded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_events_schemas_schemas_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerRevisionAdded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerRevisionAdded) ProtoMessage() {}

func (x *AnswerRevisionAdded) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_events_schemas_schemas_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerRevisionAdded.ProtoReflect.Descriptor instead.
func (*AnswerRevisionAdded) Descriptor() ([]byte, []int) {
	return file_event_stream_events_schemas_schemas_proto_rawDescGZIP(), []int{3}
}

func (x *AnswerRevisionAdded) GetId() *schemas.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AnswerRevisionAdded) GetAggregateId() *schemas.UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

func (x *AnswerRevisionAdded) GetAnswerId() string {
	if x != nil {
		return x.AnswerId
	}
	return ""
}

func (x *AnswerRevisionAdded) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

type PostUpVoted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *schemas.UUID          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *schemas.UUID          `protobuf:"bytes,2,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	VoterId     *schemas.UUID          `protobuf:"bytes,3,opt,name=voter_id,json=voterId,proto3" json:"voter_id,omitempty"`
	Cast        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=cast,proto3" json:"cast,omitempty"`
	Weight      int64                  `protobuf:"varint,5,opt,name=weight,proto3" json:"weight,omitempty"`
	VoteId      *schemas.UUID          `protobuf:"bytes,6,opt,name=vote_id,json=voteId,proto3" json:"vote_id,omitempty"`
	PostId      *schemas.UUID          `protobuf:"bytes,7,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (x *PostUpVoted) Reset() {
	*x = PostUpVoted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_events_schemas_schemas_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostUpVoted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostUpVoted) ProtoMessage() {}

func (x *PostUpVoted) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_events_schemas_schemas_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostUpVoted.ProtoReflect.Descriptor instead.
func (*PostUpVoted) Descriptor() ([]byte, []int) {
	return file_event_stream_events_schemas_schemas_proto_rawDescGZIP(), []int{4}
}

func (x *PostUpVoted) GetId() *schemas.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *PostUpVoted) GetAggregateId() *schemas.UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

func (x *PostUpVoted) GetVoterId() *schemas.UUID {
	if x != nil {
		return x.VoterId
	}
	return nil
}

func (x *PostUpVoted) GetCast() *timestamppb.Timestamp {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *PostUpVoted) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *PostUpVoted) GetVoteId() *schemas.UUID {
	if x != nil {
		return x.VoteId
	}
	return nil
}

func (x *PostUpVoted) GetPostId() *schemas.UUID {
	if x != nil {
		return x.PostId
	}
	return nil
}

type RetractedPostUpVoted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *schemas.UUID          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *schemas.UUID          `protobuf:"bytes,2,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	VoterId     *schemas.UUID          `protobuf:"bytes,3,opt,name=voter_id,json=voterId,proto3" json:"voter_id,omitempty"`
	Cast        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=cast,proto3" json:"cast,omitempty"`
	Weight      int64                  `protobuf:"varint,5,opt,name=weight,proto3" json:"weight,omitempty"`
	VoteId      *schemas.UUID          `protobuf:"bytes,6,opt,name=vote_id,json=voteId,proto3" json:"vote_id,omitempty"`
	PostId      *schemas.UUID          `protobuf:"bytes,7,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (x *RetractedPostUpVoted) Reset() {
	*x = RetractedPostUpVoted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_events_schemas_schemas_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetractedPostUpVoted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetractedPostUpVoted) ProtoMessage() {}

func (x *RetractedPostUpVoted) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_events_schemas_schemas_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetractedPostUpVoted.ProtoReflect.Descriptor instead.
func (*RetractedPostUpVoted) Descriptor() ([]byte, []int) {
	return file_event_stream_events_schemas_schemas_proto_rawDescGZIP(), []int{5}
}

func (x *RetractedPostUpVoted) GetId() *schemas.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RetractedPostUpVoted) GetAggregateId() *schemas.UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

func (x *RetractedPostUpVoted) GetVoterId() *schemas.UUID {
	if x != nil {
		return x.VoterId
	}
	return nil
}

func (x *RetractedPostUpVoted) GetCast() *timestamppb.Timestamp {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *RetractedPostUpVoted) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *RetractedPostUpVoted) GetVoteId() *schemas.UUID {
	if x != nil {
		return x.VoteId
	}
	return nil
}

func (x *RetractedPostUpVoted) GetPostId() *schemas.UUID {
	if x != nil {
		return x.PostId
	}
	return nil
}

type PostDownVoted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *schemas.UUID          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *schemas.UUID          `protobuf:"bytes,2,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	VoterId     *schemas.UUID          `protobuf:"bytes,3,opt,name=voter_id,json=voterId,proto3" json:"voter_id,omitempty"`
	Cast        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=cast,proto3" json:"cast,omitempty"`
	Weight      int64                  `protobuf:"varint,5,opt,name=weight,proto3" json:"weight,omitempty"`
	VoteId      *schemas.UUID          `protobuf:"bytes,6,opt,name=vote_id,json=voteId,proto3" json:"vote_id,omitempty"`
	PostId      *schemas.UUID          `protobuf:"bytes,7,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (x *PostDownVoted) Reset() {
	*x = PostDownVoted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_events_schemas_schemas_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostDownVoted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostDownVoted) ProtoMessage() {}

func (x *PostDownVoted) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_events_schemas_schemas_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostDownVoted.ProtoReflect.Descriptor instead.
func (*PostDownVoted) Descriptor() ([]byte, []int) {
	return file_event_stream_events_schemas_schemas_proto_rawDescGZIP(), []int{6}
}

func (x *PostDownVoted) GetId() *schemas.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *PostDownVoted) GetAggregateId() *schemas.UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

func (x *PostDownVoted) GetVoterId() *schemas.UUID {
	if x != nil {
		return x.VoterId
	}
	return nil
}

func (x *PostDownVoted) GetCast() *timestamppb.Timestamp {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *PostDownVoted) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *PostDownVoted) GetVoteId() *schemas.UUID {
	if x != nil {
		return x.VoteId
	}
	return nil
}

func (x *PostDownVoted) GetPostId() *schemas.UUID {
	if x != nil {
		return x.PostId
	}
	return nil
}

type RetractedPostDownVoted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *schemas.UUID          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *schemas.UUID          `protobuf:"bytes,2,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	VoterId     *schemas.UUID          `protobuf:"bytes,3,opt,name=voter_id,json=voterId,proto3" json:"voter_id,omitempty"`
	Cast        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=cast,proto3" json:"cast,omitempty"`
	Weight      int64                  `protobuf:"varint,5,opt,name=weight,proto3" json:"weight,omitempty"`
	PostId      *schemas.UUID          `protobuf:"bytes,6,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (x *RetractedPostDownVoted) Reset() {
	*x = RetractedPostDownVoted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_events_schemas_schemas_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetractedPostDownVoted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetractedPostDownVoted) ProtoMessage() {}

func (x *RetractedPostDownVoted) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_events_schemas_schemas_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetractedPostDownVoted.ProtoReflect.Descriptor instead.
func (*RetractedPostDownVoted) Descriptor() ([]byte, []int) {
	return file_event_stream_events_schemas_schemas_proto_rawDescGZIP(), []int{7}
}

func (x *RetractedPostDownVoted) GetId() *schemas.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RetractedPostDownVoted) GetAggregateId() *schemas.UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

func (x *RetractedPostDownVoted) GetVoterId() *schemas.UUID {
	if x != nil {
		return x.VoterId
	}
	return nil
}

func (x *RetractedPostDownVoted) GetCast() *timestamppb.Timestamp {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *RetractedPostDownVoted) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *RetractedPostDownVoted) GetPostId() *schemas.UUID {
	if x != nil {
		return x.PostId
	}
	return nil
}

type AnswerUpVoted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *schemas.UUID          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *schemas.UUID          `protobuf:"bytes,2,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	VoterId     *schemas.UUID          `protobuf:"bytes,3,opt,name=voter_id,json=voterId,proto3" json:"voter_id,omitempty"`
	Cast        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=cast,proto3" json:"cast,omitempty"`
	Weight      int64                  `protobuf:"varint,5,opt,name=weight,proto3" json:"weight,omitempty"`
	VoteId      *schemas.UUID          `protobuf:"bytes,6,opt,name=vote_id,json=voteId,proto3" json:"vote_id,omitempty"`
	AnswerId    *schemas.UUID          `protobuf:"bytes,7,opt,name=answer_id,json=answerId,proto3" json:"answer_id,omitempty"`
}

func (x *AnswerUpVoted) Reset() {
	*x = AnswerUpVoted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_events_schemas_schemas_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerUpVoted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerUpVoted) ProtoMessage() {}

func (x *AnswerUpVoted) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_events_schemas_schemas_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerUpVoted.ProtoReflect.Descriptor instead.
func (*AnswerUpVoted) Descriptor() ([]byte, []int) {
	return file_event_stream_events_schemas_schemas_proto_rawDescGZIP(), []int{8}
}

func (x *AnswerUpVoted) GetId() *schemas.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AnswerUpVoted) GetAggregateId() *schemas.UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

func (x *AnswerUpVoted) GetVoterId() *schemas.UUID {
	if x != nil {
		return x.VoterId
	}
	return nil
}

func (x *AnswerUpVoted) GetCast() *timestamppb.Timestamp {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *AnswerUpVoted) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *AnswerUpVoted) GetVoteId() *schemas.UUID {
	if x != nil {
		return x.VoteId
	}
	return nil
}

func (x *AnswerUpVoted) GetAnswerId() *schemas.UUID {
	if x != nil {
		return x.AnswerId
	}
	return nil
}

type AnswerDownVoted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *schemas.UUID          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *schemas.UUID          `protobuf:"bytes,2,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	VoterId     *schemas.UUID          `protobuf:"bytes,3,opt,name=voter_id,json=voterId,proto3" json:"voter_id,omitempty"`
	Cast        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=cast,proto3" json:"cast,omitempty"`
	Weight      int64                  `protobuf:"varint,5,opt,name=weight,proto3" json:"weight,omitempty"`
	VoteId      *schemas.UUID          `protobuf:"bytes,6,opt,name=vote_id,json=voteId,proto3" json:"vote_id,omitempty"`
	AnswerId    *schemas.UUID          `protobuf:"bytes,7,opt,name=answer_id,json=answerId,proto3" json:"answer_id,omitempty"`
}

func (x *AnswerDownVoted) Reset() {
	*x = AnswerDownVoted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_events_schemas_schemas_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerDownVoted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerDownVoted) ProtoMessage() {}

func (x *AnswerDownVoted) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_events_schemas_schemas_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerDownVoted.ProtoReflect.Descriptor instead.
func (*AnswerDownVoted) Descriptor() ([]byte, []int) {
	return file_event_stream_events_schemas_schemas_proto_rawDescGZIP(), []int{9}
}

func (x *AnswerDownVoted) GetId() *schemas.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AnswerDownVoted) GetAggregateId() *schemas.UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

func (x *AnswerDownVoted) GetVoterId() *schemas.UUID {
	if x != nil {
		return x.VoterId
	}
	return nil
}

func (x *AnswerDownVoted) GetCast() *timestamppb.Timestamp {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *AnswerDownVoted) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *AnswerDownVoted) GetVoteId() *schemas.UUID {
	if x != nil {
		return x.VoteId
	}
	return nil
}

func (x *AnswerDownVoted) GetAnswerId() *schemas.UUID {
	if x != nil {
		return x.AnswerId
	}
	return nil
}

type AnswerAccepted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *schemas.UUID          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *schemas.UUID          `protobuf:"bytes,2,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	VoterId     *schemas.UUID          `protobuf:"bytes,3,opt,name=voter_id,json=voterId,proto3" json:"voter_id,omitempty"`
	Cast        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=cast,proto3" json:"cast,omitempty"`
	Weight      int64                  `protobuf:"varint,5,opt,name=weight,proto3" json:"weight,omitempty"`
	VoteId      *schemas.UUID          `protobuf:"bytes,6,opt,name=vote_id,json=voteId,proto3" json:"vote_id,omitempty"`
	AnswerId    *schemas.UUID          `protobuf:"bytes,7,opt,name=answer_id,json=answerId,proto3" json:"answer_id,omitempty"`
}

func (x *AnswerAccepted) Reset() {
	*x = AnswerAccepted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_events_schemas_schemas_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerAccepted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerAccepted) ProtoMessage() {}

func (x *AnswerAccepted) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_events_schemas_schemas_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerAccepted.ProtoReflect.Descriptor instead.
func (*AnswerAccepted) Descriptor() ([]byte, []int) {
	return file_event_stream_events_schemas_schemas_proto_rawDescGZIP(), []int{10}
}

func (x *AnswerAccepted) GetId() *schemas.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AnswerAccepted) GetAggregateId() *schemas.UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

func (x *AnswerAccepted) GetVoterId() *schemas.UUID {
	if x != nil {
		return x.VoterId
	}
	return nil
}

func (x *AnswerAccepted) GetCast() *timestamppb.Timestamp {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *AnswerAccepted) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *AnswerAccepted) GetVoteId() *schemas.UUID {
	if x != nil {
		return x.VoteId
	}
	return nil
}

func (x *AnswerAccepted) GetAnswerId() *schemas.UUID {
	if x != nil {
		return x.AnswerId
	}
	return nil
}

type RetractedAnswerAccepted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *schemas.UUID          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AggregateId *schemas.UUID          `protobuf:"bytes,2,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	VoterId     *schemas.UUID          `protobuf:"bytes,3,opt,name=voter_id,json=voterId,proto3" json:"voter_id,omitempty"`
	Cast        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=cast,proto3" json:"cast,omitempty"`
	Weight      int64                  `protobuf:"varint,5,opt,name=weight,proto3" json:"weight,omitempty"`
	VoteId      *schemas.UUID          `protobuf:"bytes,6,opt,name=vote_id,json=voteId,proto3" json:"vote_id,omitempty"`
	AnswerId    *schemas.UUID          `protobuf:"bytes,7,opt,name=answer_id,json=answerId,proto3" json:"answer_id,omitempty"`
}

func (x *RetractedAnswerAccepted) Reset() {
	*x = RetractedAnswerAccepted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_stream_events_schemas_schemas_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetractedAnswerAccepted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetractedAnswerAccepted) ProtoMessage() {}

func (x *RetractedAnswerAccepted) ProtoReflect() protoreflect.Message {
	mi := &file_event_stream_events_schemas_schemas_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetractedAnswerAccepted.ProtoReflect.Descriptor instead.
func (*RetractedAnswerAccepted) Descriptor() ([]byte, []int) {
	return file_event_stream_events_schemas_schemas_proto_rawDescGZIP(), []int{11}
}

func (x *RetractedAnswerAccepted) GetId() *schemas.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RetractedAnswerAccepted) GetAggregateId() *schemas.UUID {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

func (x *RetractedAnswerAccepted) GetVoterId() *schemas.UUID {
	if x != nil {
		return x.VoterId
	}
	return nil
}

func (x *RetractedAnswerAccepted) GetCast() *timestamppb.Timestamp {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *RetractedAnswerAccepted) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *RetractedAnswerAccepted) GetVoteId() *schemas.UUID {
	if x != nil {
		return x.VoteId
	}
	return nil
}

func (x *RetractedAnswerAccepted) GetAnswerId() *schemas.UUID {
	if x != nil {
		return x.AnswerId
	}
	return nil
}

var File_event_stream_events_schemas_schemas_proto protoreflect.FileDescriptor

var file_event_stream_events_schemas_schemas_proto_rawDesc = []byte{
	0x0a, 0x29, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2f, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x73, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xc4, 0x01, 0x0a, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12,
	0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x31, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73,
	0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x12, 0x2b, 0x0a, 0x07, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x61, 0x67, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x54, 0x61, 0x67, 0x52, 0x07, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x61, 0x67, 0x12,
	0x37, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08,
	0x70, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x0f, 0x50, 0x6f, 0x73,
	0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0c,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55,
	0x49, 0x44, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x09,
	0x70, 0x6f, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x11, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0c, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49,
	0x44, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x37,
	0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x13, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12,
	0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x31, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73,
	0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0xa5, 0x02, 0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x74, 0x55, 0x70,
	0x56, 0x6f, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49,
	0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x76, 0x6f, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x07, 0x76, 0x6f, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x63, 0x61, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x63,
	0x61, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x27, 0x0a, 0x07, 0x76,
	0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x06, 0x76, 0x6f,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73,
	0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0xae, 0x02,
	0x0a, 0x14, 0x52, 0x65, 0x74, 0x72, 0x61, 0x63, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x55,
	0x70, 0x56, 0x6f, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55,
	0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x76, 0x6f, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x07, 0x76, 0x6f, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x63, 0x61, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04,
	0x63, 0x61, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x27, 0x0a, 0x07,
	0x76, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x06, 0x76,
	0x6f, 0x74, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0xa7,
	0x02, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x64,
	0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x31, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73,
	0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x07, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x04, 0x63, 0x61, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x63, 0x61, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x27, 0x0a, 0x07, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x06, 0x76, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x12,
	0x27, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44,
	0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x87, 0x02, 0x0a, 0x16, 0x52, 0x65, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x56, 0x6f,
	0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x07, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x2e, 0x0a, 0x04, 0x63, 0x61, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x63, 0x61, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x27, 0x0a, 0x07, 0x70, 0x6f, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74,
	0x49, 0x64, 0x22, 0xab, 0x02, 0x0a, 0x0d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x55, 0x70, 0x56,
	0x6f, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x07, 0x76, 0x6f, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x63, 0x61, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x63, 0x61,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x27, 0x0a, 0x07, 0x76, 0x6f,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x06, 0x76, 0x6f, 0x74,
	0x65, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x08, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64,
	0x22, 0xad, 0x02, 0x0a, 0x0f, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x44, 0x6f, 0x77, 0x6e, 0x56,
	0x6f, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x07, 0x76, 0x6f, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x63, 0x61, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x63, 0x61,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x27, 0x0a, 0x07, 0x76, 0x6f,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x06, 0x76, 0x6f, 0x74,
	0x65, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x08, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64,
	0x22, 0xac, 0x02, 0x0a, 0x0e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x07, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x2e, 0x0a, 0x04, 0x63, 0x61, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x63, 0x61, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x27, 0x0a, 0x07, 0x76, 0x6f, 0x74,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x06, 0x76, 0x6f, 0x74, 0x65,
	0x49, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73,
	0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x08, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x22,
	0xb5, 0x02, 0x0a, 0x17, 0x52, 0x65, 0x74, 0x72, 0x61, 0x63, 0x74, 0x65, 0x64, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0c, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49,
	0x44, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x29,
	0x0a, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44,
	0x52, 0x07, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x63, 0x61, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x04, 0x63, 0x61, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x27, 0x0a, 0x07, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55,
	0x49, 0x44, 0x52, 0x06, 0x76, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x08, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x42, 0x4e, 0x5a, 0x4c, 0x67, 0x69, 0x74, 0x6c, 0x61,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x65, 0x2d, 0x63, 0x6f, 0x69, 0x6e, 0x2d, 0x64, 0x65,
	0x73, 0x2d, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x70, 0x72, 0x65, 0x6e, 0x65, 0x75, 0x72, 0x73, 0x2f,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2d, 0x61, 0x70, 0x70, 0x2f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_event_stream_events_schemas_schemas_proto_rawDescOnce sync.Once
	file_event_stream_events_schemas_schemas_proto_rawDescData = file_event_stream_events_schemas_schemas_proto_rawDesc
)

func file_event_stream_events_schemas_schemas_proto_rawDescGZIP() []byte {
	file_event_stream_events_schemas_schemas_proto_rawDescOnce.Do(func() {
		file_event_stream_events_schemas_schemas_proto_rawDescData = protoimpl.X.CompressGZIP(file_event_stream_events_schemas_schemas_proto_rawDescData)
	})
	return file_event_stream_events_schemas_schemas_proto_rawDescData
}

var file_event_stream_events_schemas_schemas_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_event_stream_events_schemas_schemas_proto_goTypes = []interface{}{
	(*PostAdded)(nil),               // 0: events.PostAdded
	(*PostAnswerAdded)(nil),         // 1: events.PostAnswerAdded
	(*PostRevisionAdded)(nil),       // 2: events.PostRevisionAdded
	(*AnswerRevisionAdded)(nil),     // 3: events.AnswerRevisionAdded
	(*PostUpVoted)(nil),             // 4: events.PostUpVoted
	(*RetractedPostUpVoted)(nil),    // 5: events.RetractedPostUpVoted
	(*PostDownVoted)(nil),           // 6: events.PostDownVoted
	(*RetractedPostDownVoted)(nil),  // 7: events.RetractedPostDownVoted
	(*AnswerUpVoted)(nil),           // 8: events.AnswerUpVoted
	(*AnswerDownVoted)(nil),         // 9: events.AnswerDownVoted
	(*AnswerAccepted)(nil),          // 10: events.AnswerAccepted
	(*RetractedAnswerAccepted)(nil), // 11: events.RetractedAnswerAccepted
	(*schemas.UUID)(nil),            // 12: commands.UUID
	(*schemas.PostTag)(nil),         // 13: commands.PostTag
	(*timestamppb.Timestamp)(nil),   // 14: google.protobuf.Timestamp
}
var file_event_stream_events_schemas_schemas_proto_depIdxs = []int32{
	12, // 0: events.PostAdded.id:type_name -> commands.UUID
	12, // 1: events.PostAdded.aggregate_id:type_name -> commands.UUID
	13, // 2: events.PostAdded.PostTag:type_name -> commands.PostTag
	14, // 3: events.PostAdded.post_date:type_name -> google.protobuf.Timestamp
	12, // 4: events.PostAnswerAdded.id:type_name -> commands.UUID
	12, // 5: events.PostAnswerAdded.aggregate_id:type_name -> commands.UUID
	14, // 6: events.PostAnswerAdded.post_date:type_name -> google.protobuf.Timestamp
	12, // 7: events.PostRevisionAdded.id:type_name -> commands.UUID
	12, // 8: events.PostRevisionAdded.aggregate_id:type_name -> commands.UUID
	14, // 9: events.PostRevisionAdded.post_date:type_name -> google.protobuf.Timestamp
	12, // 10: events.AnswerRevisionAdded.id:type_name -> commands.UUID
	12, // 11: events.AnswerRevisionAdded.aggregate_id:type_name -> commands.UUID
	14, // 12: events.AnswerRevisionAdded.updated:type_name -> google.protobuf.Timestamp
	12, // 13: events.PostUpVoted.id:type_name -> commands.UUID
	12, // 14: events.PostUpVoted.aggregate_id:type_name -> commands.UUID
	12, // 15: events.PostUpVoted.voter_id:type_name -> commands.UUID
	14, // 16: events.PostUpVoted.cast:type_name -> google.protobuf.Timestamp
	12, // 17: events.PostUpVoted.vote_id:type_name -> commands.UUID
	12, // 18: events.PostUpVoted.post_id:type_name -> commands.UUID
	12, // 19: events.RetractedPostUpVoted.id:type_name -> commands.UUID
	12, // 20: events.RetractedPostUpVoted.aggregate_id:type_name -> commands.UUID
	12, // 21: events.RetractedPostUpVoted.voter_id:type_name -> commands.UUID
	14, // 22: events.RetractedPostUpVoted.cast:type_name -> google.protobuf.Timestamp
	12, // 23: events.RetractedPostUpVoted.vote_id:type_name -> commands.UUID
	12, // 24: events.RetractedPostUpVoted.post_id:type_name -> commands.UUID
	12, // 25: events.PostDownVoted.id:type_name -> commands.UUID
	12, // 26: events.PostDownVoted.aggregate_id:type_name -> commands.UUID
	12, // 27: events.PostDownVoted.voter_id:type_name -> commands.UUID
	14, // 28: events.PostDownVoted.cast:type_name -> google.protobuf.Timestamp
	12, // 29: events.PostDownVoted.vote_id:type_name -> commands.UUID
	12, // 30: events.PostDownVoted.post_id:type_name -> commands.UUID
	12, // 31: events.RetractedPostDownVoted.id:type_name -> commands.UUID
	12, // 32: events.RetractedPostDownVoted.aggregate_id:type_name -> commands.UUID
	12, // 33: events.RetractedPostDownVoted.voter_id:type_name -> commands.UUID
	14, // 34: events.RetractedPostDownVoted.cast:type_name -> google.protobuf.Timestamp
	12, // 35: events.RetractedPostDownVoted.post_id:type_name -> commands.UUID
	12, // 36: events.AnswerUpVoted.id:type_name -> commands.UUID
	12, // 37: events.AnswerUpVoted.aggregate_id:type_name -> commands.UUID
	12, // 38: events.AnswerUpVoted.voter_id:type_name -> commands.UUID
	14, // 39: events.AnswerUpVoted.cast:type_name -> google.protobuf.Timestamp
	12, // 40: events.AnswerUpVoted.vote_id:type_name -> commands.UUID
	12, // 41: events.AnswerUpVoted.answer_id:type_name -> commands.UUID
	12, // 42: events.AnswerDownVoted.id:type_name -> commands.UUID
	12, // 43: events.AnswerDownVoted.aggregate_id:type_name -> commands.UUID
	12, // 44: events.AnswerDownVoted.voter_id:type_name -> commands.UUID
	14, // 45: events.AnswerDownVoted.cast:type_name -> google.protobuf.Timestamp
	12, // 46: events.AnswerDownVoted.vote_id:type_name -> commands.UUID
	12, // 47: events.AnswerDownVoted.answer_id:type_name -> commands.UUID
	12, // 48: events.AnswerAccepted.id:type_name -> commands.UUID
	12, // 49: events.AnswerAccepted.aggregate_id:type_name -> commands.UUID
	12, // 50: events.AnswerAccepted.voter_id:type_name -> commands.UUID
	14, // 51: events.AnswerAccepted.cast:type_name -> google.protobuf.Timestamp
	12, // 52: events.AnswerAccepted.vote_id:type_name -> commands.UUID
	12, // 53: events.AnswerAccepted.answer_id:type_name -> commands.UUID
	12, // 54: events.RetractedAnswerAccepted.id:type_name -> commands.UUID
	12, // 55: events.RetractedAnswerAccepted.aggregate_id:type_name -> commands.UUID
	12, // 56: events.RetractedAnswerAccepted.voter_id:type_name -> commands.UUID
	14, // 57: events.RetractedAnswerAccepted.cast:type_name -> google.protobuf.Timestamp
	12, // 58: events.RetractedAnswerAccepted.vote_id:type_name -> commands.UUID
	12, // 59: events.RetractedAnswerAccepted.answer_id:type_name -> commands.UUID
	60, // [60:60] is the sub-list for method output_type
	60, // [60:60] is the sub-list for method input_type
	60, // [60:60] is the sub-list for extension type_name
	60, // [60:60] is the sub-list for extension extendee
	0,  // [0:60] is the sub-list for field type_name
}

func init() { file_event_stream_events_schemas_schemas_proto_init() }
func file_event_stream_events_schemas_schemas_proto_init() {
	if File_event_stream_events_schemas_schemas_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_event_stream_events_schemas_schemas_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostAdded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_events_schemas_schemas_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostAnswerAdded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_events_schemas_schemas_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostRevisionAdded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_events_schemas_schemas_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerRevisionAdded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_events_schemas_schemas_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostUpVoted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_events_schemas_schemas_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetractedPostUpVoted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_events_schemas_schemas_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostDownVoted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_events_schemas_schemas_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetractedPostDownVoted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_events_schemas_schemas_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerUpVoted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_events_schemas_schemas_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerDownVoted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_events_schemas_schemas_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerAccepted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_stream_events_schemas_schemas_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetractedAnswerAccepted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_event_stream_events_schemas_schemas_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_event_stream_events_schemas_schemas_proto_goTypes,
		DependencyIndexes: file_event_stream_events_schemas_schemas_proto_depIdxs,
		MessageInfos:      file_event_stream_events_schemas_schemas_proto_msgTypes,
	}.Build()
	File_event_stream_events_schemas_schemas_proto = out.File
	file_event_stream_events_schemas_schemas_proto_rawDesc = nil
	file_event_stream_events_schemas_schemas_proto_goTypes = nil
	file_event_stream_events_schemas_schemas_proto_depIdxs = nil
}
